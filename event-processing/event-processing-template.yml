AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: "A template to create all the Event Processing infrastructure."

Parameters:
  CodeSigningConfigArn:
    Type: String
    Default: "none"
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: "none"
  Environment:
    Description: "The environment type"
    Type: "String"
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      - "integration"
      - "production"
    ConstraintDescription: must be dev, build, staging, integration or production

Conditions:
  SetPermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"
  UseCodeSigning:
    Fn::Not:
      - Fn::Equals:
          - !Ref CodeSigningConfigArn
          - "none"

Globals:
  Function:
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    PermissionsBoundary: !If
      - SetPermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    Architectures:
      - x86_64

Mappings:
  AuditAccountDeployRole:
    Environment:
      build: "arn:aws:iam::761029721660:role/audit-build-pipeline-DeployRole-UVQCZKTAHZM5"
      dev: "arn:aws:iam::725018305812:root"

Resources:
  epSNSTopic:
    Properties:
      TopicName: !Sub
        - "EventProcessorSNSTopic-${EnvironmentName}"
        - EnvironmentName: !Ref Environment
    Type: "AWS::SNS::Topic"

  SNSSubscribePolicy:
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      PolicyDocument:
        Id: SNSSubscribePolicy
        Version: 2012-10-17
        Statement:
          - Sid: SNSSubscribePolicy-1
            Effect: Allow
            Action:
              - 'sns:Subscribe'
            Principal:
              AWS:
                - !FindInMap [AuditAccountDeployRole, Environment, !Ref Environment]
            Resource: !Ref epSNSTopic
      Topics:
      - !Ref epSNSTopic

  EventProcessorLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: "/aws/lambda/EventProcessorFunction"

  EventProcessorFunction:
    DependsOn:
      - EventProcessorLogGroup
    Type: "AWS::Serverless::Function"
    Properties:
      FunctionName: "EventProcessorFunction"
      CodeUri: ../event-processing/event-processor
      PackageType: Zip
      Handler: app.handler
      Runtime: nodejs14.x
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt epSNSTopic.TopicName
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
        - app.ts

  EventInvokeConfig:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName: !Ref EventProcessorFunction
      Qualifier: "$LATEST"
      MaximumEventAgeInSeconds: 600
      MaximumRetryAttempts: 2
      DestinationConfig:
        OnSuccess:
          Destination: !Ref epSNSTopic

  EventProcessorUnknownFieldsErrorMetric:
    DependsOn:
      - EventProcessorFunction
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "WARN UNKNOWN FIELDS"
      LogGroupName: "/aws/lambda/EventProcessorFunction"
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: "lambda/di/txma/errors"
          MetricName: "Unknown Fields"

  EventProcessorUnknownFieldsAlarm:
    DependsOn:
      - EventProcessorUnknownFieldsErrorMetric
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Event Processor Unknown Fields Alarm
      AlarmName: UnknownFieldsAlarm
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      Statistic: Sum
      Period: 86400
      Threshold: 1
      MetricName: "Unknown Fields"
      Namespace: "lambda/di/txma/errors"

  EventProcessorRequiredFieldsErrorMetric:
    DependsOn:
      - EventProcessorFunction
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterPattern: "ERROR VALIDATION ERROR"
      LogGroupName: "/aws/lambda/EventProcessorFunction"
      MetricTransformations:
        - MetricValue: "1"
          MetricNamespace: "lambda/di/txma/errors"
          MetricName: "Validation Errors"

  EventProcessorRequiredFieldsAlarm:
    DependsOn:
      - EventProcessorRequiredFieldsErrorMetric
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: Event Processor Required Fields Alarm
      AlarmName: RequiredFieldsAlarm
      ComparisonOperator: GreaterThanThreshold
      EvaluationPeriods: 1
      Statistic: Sum
      Period: 86400
      Threshold: 1
      MetricName: "Validation Errors"
      Namespace: "lambda/di/txma/errors"
